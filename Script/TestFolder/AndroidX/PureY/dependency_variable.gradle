/*
 * Copyright (C) 2018 The Android Open Source Project
 *
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 *      http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 */

apply from: 'versions_variable.gradle'

/**
* Shared file between builds so that they can all use the same dependencies and
* maven repositories.
**/
ext.deps = [:]
def deps = [:]
// original from architecture-components-samples-master:BasicSample
def support = [:]
support.annotations = "androidx.annotation:annotation:$versions.support"
support.app_compat = "androidx.appcompat:appcompat:$versions.appcompat"
support.recyclerview = "androidx.recyclerview:recyclerview:$versions.support"
support.cardview = "androidx.cardview:cardview:$versions.support"
support.design = "com.google.android.material:material:$versions.support"
support.core_utils = "androidx.legacy:legacy-support-core-utils:$versions.support"
support.core_ktx = "androidx.core:core-ktx:$versions.core_ktx"
support.fragment_runtime = "androidx.fragment:fragment:${versions.fragment}"
support.fragment_runtime_ktx = "androidx.fragment:fragment-ktx:${versions.fragment}"
support.fragment_testing = "androidx.fragment:fragment-testing:${versions.fragment}"
deps.support = support

def x_support = [:]
x_support.annotation = "androidx.annotation:annotation:$versions.androidx_annotation"
x_support.appcompat = "androidx.appcompat:appcompat:$versions.androidx_appcompat"
x_support.cardview = "androidx.cardview:cardview:$versions.androidx_support"
x_support.constraintlayout = "androidx.constraintlayout:constraintlayout:$versions.androidx_constraintlayout"
x_support.recyclerview = "androidx.recyclerview:recyclerview:$versions.androidx_support"
// x_support.v4 = "androidx.legacy:legacy-support-v4:$versions.androidx_support"
x_support.core_utils = "androidx.legacy:legacy-support-core-utils:$versions.androidx_support"
x_support.core_ktx = "androidx.core:core-ktx:$versions.core_ktx"

x_support.fragment_runtime = "androidx.fragment:fragment:${versions.androidx_fragment}"
x_support.fragment_runtime_ktx = "androidx.fragment:fragment-ktx:${versions.androidx_fragment}"
x_support.fragment_testing = "androidx.fragment:fragment-testing:${versions.androidx_fragment}"

x_support.collection = "androidx.collection:collection:${versions.androidx_support}"
// 引用：CircularReveal-master;plaid-master:core_dependencies.gradle;
x_support.dynamicanimation = "androidx.dynamicanimation:dynamicanimation:$versions.androidx_support"
// 引用：plaid-master:core_dependencies.gradle;
x_support.browser = "androidx.browser:browser:$versions.androidx_support"

x_support.palette = "androidx.palette:palette:$versions.androidx_support"

x_support.paging_ktx = "androidx.paging:paging-runtime-ktx:$versions.paging"

deps.x_support = x_support
// 本定义废弃，改为在x_support中定义(androidx的core支持)
def androidx_core = [:]
// 引用：plaid-master:core_dependencies.gradle;
androidx_core.core_ktx = "androidx.core:core-ktx:$versions.androidx_core_ktx"
deps.androidx_core = androidx_core

def activity = [:]
// Java language implementation
activity.activity = "androidx.activity:activity:$versions.androidx_activity"
// Kotlin
activity.activity_ktx = "androidx.activity:activity-ktx:$versions.androidx_activity"
deps.activity = activity


//注：两个同指 material
x_support.design = "com.google.android.material:material:$versions.androidx_support"
x_support.google_material = "com.google.android.material:material:$versions.androidx_support"

def google_android = [:]
google_android.material = "com.google.android.material:material:$versions.androidx_support"
deps.google_android = google_android


deps.google_gson = "com.google.code.gson:gson:$versions.google_gson"

deps.google_guava = "com.google.guava:guava:$versions.google_guava"

def dagger = [:]
dagger.runtime = "com.google.dagger:dagger:$versions.dagger"
dagger.android = "com.google.dagger:dagger-android:$versions.dagger"
dagger.android_support = "com.google.dagger:dagger-android-support:$versions.dagger"
dagger.compiler = "com.google.dagger:dagger-compiler:$versions.dagger"
dagger.android_processor = "com.google.dagger:dagger-android-processor:$versions.dagger"

deps.dagger = dagger

def room = [:]
room.runtime = "androidx.room:room-runtime:$versions.room"
room.compiler = "androidx.room:room-compiler:$versions.room"
room.rxjava2 = "androidx.room:room-rxjava2:$versions.room"
room.testing = "androidx.room:room-testing:$versions.room"
deps.room = room

def lifecycle = [:]
lifecycle.runtime = "androidx.lifecycle:lifecycle-runtime:$versions.lifecycle"
lifecycle.java8 = "androidx.lifecycle:lifecycle-common-java8:$versions.lifecycle"
lifecycle.compiler = "androidx.lifecycle:lifecycle-compiler:$versions.lifecycle"

lifecycle.extensions = "androidx.lifecycle:lifecycle-extensions:$versions.lifecycle"
// ViewModel
lifecycle.viewmodel = "androidx.lifecycle:lifecycle-viewmodel:$versions.lifecycle"
// 来自：BasicRxJavaSampleKotlin
lifecycle.viewmodel_ktx = "androidx.lifecycle:lifecycle-viewmodel-ktx:$versions.lifecycle"

lifecycle.livedata_ktx = "androidx.lifecycle:lifecycle-livedata-ktx:$versions.lifecycle"
deps.lifecycle = lifecycle

def arch_core = [:]
arch_core.runtime = "androidx.arch.core:core-runtime:$versions.arch_core"
arch_core.testing = "androidx.arch.core:core-testing:$versions.arch_core"
deps.arch_core = arch_core

def retrofit = [:]
retrofit.runtime = "com.squareup.retrofit2:retrofit:$versions.retrofit"
retrofit.gson = "com.squareup.retrofit2:converter-gson:$versions.retrofit"
retrofit.mock = "com.squareup.retrofit2:retrofit-mock:$versions.retrofit"
retrofit.adapter_rxjava2 = "com.squareup.retrofit2:adapter-rxjava2:$versions.retrofit"

retrofit.kotlin_coroutines_adapter = "com.jakewharton.retrofit:retrofit2-kotlin-coroutines-adapter:$versions.retrofit_kotlin_coroutines"

deps.retrofit = retrofit

def okhttp3 = [:]
okhttp3.okhttp = "com.squareup.okhttp3:okhttp:${versions.okhttp}"
okhttp3.logging_interceptor = "com.squareup.okhttp3:logging-interceptor:${versions.okhttp}"
deps.okhttp3 = okhttp3

deps.jsoup = "org.jsoup:jsoup:${versions.jsoup}"

def androidx_test = [:]
androidx_test.core = "androidx.test:core:$versions.androidx_test"
androidx_test.runner = "androidx.test:runner:$versions.androidx_test"
androidx_test.rules = "androidx.test:rules:$versions.androidx_test"
androidx_test.uiautomator = "androidx.test.uiautomator:uiautomator:$versions.ui_automator"

def espresso = [:]
espresso.core = "androidx.test.espresso:espresso-core:$versions.espresso"
espresso.contrib = "androidx.test.espresso:espresso-contrib:$versions.espresso"
espresso.intents = "androidx.test.espresso:espresso-intents:$versions.espresso"
// deps.espresso = espresso

androidx_test.espresso = espresso

deps.androidx_test = androidx_test

def mockito = [:]
mockito.core = "org.mockito:mockito-core:${versions.mockito}"

mockito.all = "org.mockito:mockito-all:$versions.mockito"
mockito.android = "org.mockito:mockito-android:$versions.mockito"
deps.mockito = mockito

def mockitokotlin2 = [:]
mockitokotlin2.mockito_kotlin = "com.nhaarman.mockitokotlin2:mockito-kotlin:${versions.mockito_kotlin}"
deps.mockitokotlin2 = mockitokotlin2





def kotlin = [:]
kotlin.stdlib = "org.jetbrains.kotlin:kotlin-stdlib-jdk8:$versions.kotlin"
kotlin.test = "org.jetbrains.kotlin:kotlin-test-junit:$versions.kotlin"
kotlin.plugin = "org.jetbrains.kotlin:kotlin-gradle-plugin:$versions.kotlin"
kotlin.allopen = "org.jetbrains.kotlin:kotlin-allopen:$versions.kotlin"
deps.kotlin = kotlin

def kotlinx = [:]
kotlinx.coroutines_core = "org.jetbrains.kotlinx:kotlinx-coroutines-core:$versions.kotlinx_coroutines"
kotlinx.coroutines_android = "org.jetbrains.kotlinx:kotlinx-coroutines-android:$versions.kotlinx_coroutines"
deps.kotlinx = kotlinx

// Butter knife
def butterknife = [:]
butterknife.runtime = "com.jakewharton:butterknife:$versions.butterknife"
butterknife.compiler = "com.jakewharton:butterknife-compiler:$versions.butterknife"
deps.butterknife = butterknife

def glide = [:]
glide.runtime = "com.github.bumptech.glide:glide:$versions.glide"
glide.compiler = "com.github.bumptech.glide:compiler:$versions.glide"
deps.glide = glide

deps.square_picasso = "com.squareup.picasso:picasso:$versions.squareup_picasso"

// Network
deps.android_volley = "com.android.volley:volley:${versions.volley}"
// Media
// svg
deps.caverock_androidsvg_aar = "com.caverock:androidsvg-aar:${versions.caverock_androidsvg}"

deps.dexmaker = "com.linkedin.dexmaker:dexmaker-mockito:$versions.dexmaker"
deps.timber = "com.jakewharton.timber:timber:$versions.timber"
deps.junit = "junit:junit:${versions.junit}"
deps.mock_web_server = "com.squareup.okhttp3:mockwebserver:$versions.mockwebserver"
deps.rxjava2 = "io.reactivex.rxjava2:rxjava:$versions.rxjava2"
deps.rx_android = "io.reactivex.rxjava2:rxandroid:$versions.rx_android"
deps.hamcrest = "org.hamcrest:hamcrest-all:$versions.hamcrest"
deps.android_gradle_plugin = "com.android.tools.build:gradle:$versions.android_gradle_plugin"
ext.deps = deps

def build_versions = [:]
build_versions.min_sdk = "$versions.min_sdk"
build_versions.target_sdk = 29 // "$versions.target_sdk" //问题：如何传数值
build_versions.build_tools = "$versions.build_tools"
ext.build_versions = build_versions

def work = [:]
work.runtime = "android.arch.work:work-runtime:$versions.work"
work.testing = "android.arch.work:work-testing:$versions.work"
work.firebase = "android.arch.work:work-firebase:$versions.work"
work.runtime_ktx = "android.arch.work:work-runtime-ktx:$versions.work"
deps.work = work

def navigation = [:]
navigation.runtime = "androidx.navigation:navigation-runtime:$versions.navigation"
navigation.runtime_ktx = "androidx.navigation:navigation-runtime-ktx:$versions.navigation"
navigation.fragment = "androidx.navigation:navigation-fragment:$versions.navigation"
navigation.fragment_ktx = "androidx.navigation:navigation-fragment-ktx:$versions.navigation"
navigation.ui = "androidx.navigation:navigation-ui:$versions.navigation"
navigation.ui_ktx = "androidx.navigation:navigation-ui-ktx:$versions.navigation"

navigation.safe_args_plugin = "androidx.navigation:navigation-safe-args-gradle-plugin:$versions.navigation"
navigation.testing = "androidx.navigation:navigation-testing:$versions.navigation"
deps.navigation = navigation

// recyclerview
deps.thoughtbot_expandablerecyclerview = "com.thoughtbot:expandablerecyclerview:${versions.thoughtbot_expandablerecyclerview}"
deps.thoughtbot_expandablecheckrecyclerview = "com.thoughtbot:expandablerecyclerview:${versions.thoughtbot_expandablecheckrecyclerview}"

deps.jp_wasabeef_recyclerview_animators = "jp.wasabeef:recyclerview-animators:${versions.wasabeef_recyclerview_animators}"
deps.myinnos_alphabetindex_fast_scroll = "com.github.myinnos:AlphabetIndex-Fast-Scroll-RecyclerView:${versions.myinnos_alphabetindex_fast_scroll}"

ext.deps = deps

def addRepos(RepositoryHandler handler) {
    handler.google()
    handler.jcenter()
    // Add repository
    handler.maven { url 'https://maven.google.com/' }
    handler.maven { url 'https://maven.fabric.io/public' }

    // maven { url 'http://dl.bintray.com/kotlin/kotlin-eap' }

    handler.maven { url 'https://oss.sonatype.org/content/repositories/snapshots' }
    handler.maven { url 'https://dl.bintray.com/mockito/maven' }

}
ext.addRepos = this.&addRepos
